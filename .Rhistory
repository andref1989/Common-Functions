ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1"), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.05),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.05),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1"), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.05),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval<=0.1),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1"), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.05),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1"), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.05),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1"), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.05),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
str(dplyr::filter(KD_comparison_sub, padj <=0.05))
table(dplyr::filter(KD_comparison_sub, padj <=0.05)$pathway)
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1"), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.05),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
str(dplyr::filter(KD_comparison_sub, Gene=="TP53",padj<=0.05,Layer==0))
str(dplyr::filter(KD_comparison_sub, Gene=="MDM2",padj<=0.05,Layer==0))
str(dplyr::filter(KD_comparison_sub, Gene=="CDK4",padj<=0.05,Layer==0))
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1"), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.05),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1"), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval !=1),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1"), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
str(KD_comparison_sub)
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")
str(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)))
str(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene),OS_Enrichment_pval!=1))
KD_comparison_sub_mat <- reshape2::dcast(dplyr::select(dplyr::filter(KD_comparison_sub,Gene %in% c("TP53","CDK4","MDM2")), pathway,padj, Gene,Signature),pathway~Signature ,value.var="padj", fun.aggregate=mean,fill=1)
KD_comparison_sub_mat)
KD_comparison_sub_mat
Heatmap(KD_comparison_sub_mat)
str(KD_comparison_sub_mat)
Heatmap(KD_comparison_sub_mat)
rownames(KD_comparison_sub_mat) <- KD_comparison_sub_mat[,1]
KD_comparison_sub_mat[,1] <- NULL

Heatmap(KD_comparison_sub_mat)
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold")  C-c C-c
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold") 
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold") 
> ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold") 
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold") 
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval <=0.9,grepl("TP53|MDM2|CDK4",Gene)),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold") 
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+geom_text(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,OS_Enrichment_pval !=1,grepl("TP53|MDM2|CDK4",Gene)),aes(label=round(OS_Enrichment_pval,3)),size=3,fontface="bold") 
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray50")+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray50",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray10",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray90",size=2)+theme_void()+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray90",size=2)+theme_void()+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Signature))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Gene))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+xlab("Subnetwork Key Regulator")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Gene))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene)),aes(fill=os_effect),color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Gene))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene),OS_Enrichment_pval<=0.05),aes(fill=os_effect),color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Gene))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene),OS_Enrichment_pval<=0.55),aes(fill=os_effect),color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Gene))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene),OS_Enrichment_pval<=1),aes(fill=os_effect),color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Gene))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene),OS_Enrichment_pval!=1),aes(fill=os_effect),color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene)), aes(y=pathway,Gene))+geom_tile(data=dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1", padj <=0.1,grepl("TP53|MDM2|CDK4",Gene),OS_Enrichment_pval!=1),color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene),padj <=0.1), aes(y=pathway,Gene))+geom_tile(color="gray90",size=2)+theme_anf_big+scale_TF_score(c("better"="green","worse"="red"))+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")
> ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene),padj <=0.1), aes(y=pathway,Gene))+geom_tile(color="gray90",size=2)+theme_anf_big+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")

ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene),padj <=0.1), aes(y=pathway,Gene))+geom_tile(color="gray90",size=2)+theme_anf_big+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene),padj <=0.1), aes(y=pathway,Gene))+geom_tile(color="gray90",size=2)+theme_anf_big+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")+labs(title="Subnetworks regulated by CDK4, TP53 and MDM2")
modules_of_interest
str(KD_comparison)
str(dplyr::filter(KD_comparison, pathway %in% modules_of_interest))
str(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_enrichment_pval <=0.05))
str(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_Enrichment_pval <=0.05))
str(unique(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_Enrichment_pval <=0.05)$Gene)
)
str(unique(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_Enrichment_pval <=0.05,Layer=="0")$Gene)
str(unique(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_Enrichment_pval <=0.05,Layer=="0")$Gene)
str(unique(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_Enrichment_pval <=0.05,Layer=="0")$Gene))
str(unstack(unique(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_Enrichment_pval <=0.05,Layer=="0") %>% dplyr::select(pathway,Gene))))
str(unstack(unique(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_Enrichment_pval <=0.05,Layer=="0") %>% dplyr::select(pathway,Gene))))
str(unique(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_Enrichment_pval <=0.05,Layer=="0") %>% dplyr::select(pathway,Gene)))
key_drivers <- unstack(df[c("Gene","pathway")])
df <- unique(dplyr::filter(KD_comparison, pathway %in% modules_of_interest,OS_Enrichment_pval !=1, OS_Enrichment_pval <=0.05,Layer=="0") %>% dplyr::select(pathway,Gene))
key_drivers <- unstack(df[c("Gene","pathway")])
str(key_drivers)
str(final_modules)
str(MANTRA_regimen)
str(MANTRA_regimen %>% group_by(SUBJID) %>% dplyr::filter(Regimen_Rank==max(Regimen_Rank)) %>% dplyr::summarize(mean(Regimen_Rank)))
str(MANTRA_regimen %>% group_by(SUBJID) %>% dplyr::filter(Regimen_Rank==max(Regimen_Rank)) %>% dplyr::summarize(Num_Therapies=mean(Regimen_Rank)))
sub <- MANTRA_regimen %>% group_by(SUBJID) %>% dplyr::filter(Regimen_Rank==max(Regimen_Rank)) %>% dplyr::summarize(Num_Therapies=mean(Regimen_Rank))
summary(sub
)
table(sub[,2])
sub <- MANTRA_regimen %>% group_by(SUBJID) %>% dplyr::mutate(max_rank=max(Regimen_Rank)) %>% dplyr::filter(Regimen_Rank==max_rank) %>% dplyr::summarize(Num_Therapies=mean(Regimen_Rank))
sub
any(is.na(sub$Num_Therapies))
iqr(sub$Num_Therapies)
quantile(sub$Num_Therapies)
str(module_list[[1]])
names(module_list)
str(Mila_sigs[[1]])
names(public_signatures)
public_signatures <- readRDS("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/Public_MDM2i_dge_list.rds")
names(public_signatures)
str(runs)
str(module_int)
str(relevant_modules)
table(relevant_modules$network)
dplyr::filter(relevant_modules, network=="DDLPS_WDLPS_24Q1")$module
sort(dplyr::filter(relevant_modules, network=="DDLPS_WDLPS_24Q1")$module)
str(final_modules)
str(KD_file)
dplyr::filter(KD_file, Gene=="MDM2")
dplyr::filter(KD_file, Gene %in% c("MDM2","TP53")
)
?calc_GSEA
?tempusr::calc_GSEA
calc_GSEA
public_signatures <- readRDS("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/Public_MDM2i_dge_list.rds")

if(!file.exists("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds")){

    for(i in 1:nrow(runs)){
    tranche_int <- runs[i,"Tranche"]
    net_int  <- runs[i,"Network"]
    for(j in names(public_signatures)){
        sig <- public_signatures[[j]]
        sub_relevant <- unique(dplyr::filter(relevant_modules, Tranche==tranche_int, network %in% net_int)$module)
        sub_relevant <- c(sub_relevant, unique(dplyr::filter(KD_file, Tranche==tranche_int, network %in% net_int)$signature))
        module_int <- module_list[[tranche_int]][[net_int]][sub_relevant]

        int <- calc_GSEA(sig, module_int) %>% dplyr::select(-leadingEdge)
        int$Network <- net_int
        int$Tranche <- tranche_int
        int$Signature <- paste0(j,"_MDM2i_sig")
        int_list[[j]] <- int}
    public_sig_enrichment_df <- rbind(public_sig_enrichment_df, do.call("rbind",int_list))
}
saveRDS(public_sig_enrichment_df,"/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds")} else{ public_sig_enrichment_df <- readRDS("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds") }

str(public_signatures)
runs
str(sub_relevant)
unique(sub_relevant)
str(unique(sub_relevant))
str(module_int)
str(sig)
names(public_signatures)
public_signatures <- readRDS("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/Public_MDM2i_dge_list.rds")

if(!file.exists("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds")){

    for(i in 1:nrow(runs)){
    tranche_int <- runs[i,"Tranche"]
    net_int  <- runs[i,"Network"]
    for(j in names(public_signatures)){
        sig <- public_signatures[[j]][[1]]
        sub_relevant <- unique(dplyr::filter(relevant_modules, Tranche==tranche_int, network %in% net_int)$module)
        sub_relevant <- c(sub_relevant, unique(dplyr::filter(KD_file, Tranche==tranche_int, network %in% net_int)$signature))
        module_int <- module_list[[tranche_int]][[net_int]][sub_relevant]

        int <- calc_GSEA(sig, module_int) %>% dplyr::select(-leadingEdge)
        int$Network <- net_int
        int$Tranche <- tranche_int
        int$Signature <- paste0(j,"_MDM2i_sig")
        int_list[[j]] <- int}
    public_sig_enrichment_df <- rbind(public_sig_enrichment_df, do.call("rbind",int_list))
}
saveRDS(public_sig_enrichment_df,"/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds")} else{ public_sig_enrichment_df <- readRDS("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds") }


str(module_int)
public_signatures <- readRDS("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/Public_MDM2i_dge_list.rds")

if(!file.exists("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds")){

    for(i in 1:nrow(runs)){
    tranche_int <- runs[i,"Tranche"]
    net_int  <- runs[i,"Network"]
    for(j in names(public_signatures)){
        sig <- public_signatures[[j]][[1]]
        sig$ensembl_gene_id <- sig$EnsemblGeneID
        sub_relevant <- unique(dplyr::filter(relevant_modules, Tranche==tranche_int, network %in% net_int)$module)
        sub_relevant <- c(sub_relevant, unique(dplyr::filter(KD_file, Tranche==tranche_int, network %in% net_int)$signature))
        module_int <- module_list[[tranche_int]][[net_int]][sub_relevant]

        int <- calc_GSEA(sig, module_int) %>% dplyr::select(-leadingEdge)
        int$Network <- net_int
        int$Tranche <- tranche_int
        int$Signature <- paste0(j,"_MDM2i_sig")
        int_list[[j]] <- int}
    public_sig_enrichment_df <- rbind(public_sig_enrichment_df, do.call("rbind",int_list))
}
saveRDS(public_sig_enrichment_df,"/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds")} else{ public_sig_enrichment_df <- readRDS("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds") }


if(!file.exists("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds")){
    public_sig_enrichment_df <- data.frame(stringsAsFactors = F)
    for(i in 1:nrow(runs)){
    tranche_int <- runs[i,"Tranche"]
    net_int  <- runs[i,"Network"]
    for(j in names(public_signatures)){
        sig <- public_signatures[[j]][[1]]
        sig$ensembl_gene_id <- sig$EnsemblGeneID
        sub_relevant <- unique(dplyr::filter(relevant_modules, Tranche==tranche_int, network %in% net_int)$module)
        sub_relevant <- c(sub_relevant, unique(dplyr::filter(KD_file, Tranche==tranche_int, network %in% net_int)$signature))
        module_int <- module_list[[tranche_int]][[net_int]][sub_relevant]

        int <- calc_GSEA(sig, module_int) %>% dplyr::select(-leadingEdge)
        int$Network <- net_int
        int$Tranche <- tranche_int
        int$Signature <- paste0(j,"_MDM2i_sig")
        int_list[[j]] <- int}
    public_sig_enrichment_df <- rbind(public_sig_enrichment_df, do.call("rbind",int_list))
}
saveRDS(public_sig_enrichment_df,"/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds")} else{ public_sig_enrichment_df <- readRDS("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/Module_Public_Signature_Enrichment.rds") }

str(public_sig_enrichment_df)
table(public_sig_enrichment_df$Network)
j
str(int$Signature)
table(public_sig_enrichment_df$Signature)
names(public_signatures)
lapply(names(public_signatures), function(x) names(public_signatures)[[x]])
str(public_signatures[1])
j
str(int_list)
str(public_sig_enrichment)
table(public_sig_enrichment_df$Signature)
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=4)+theme_anf_big
input_td <- readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_TD.rds")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=4)+theme_anf_big
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=3)+theme_anf_big
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=1)))
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(color=guide_legend(override.aes=list(size=1)))
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(color=guide_legend(override.aes=list(size=0.5)))
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))+theme(legend.title = element_text( size=2), legend.text=element_text(size=2))
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))+theme(legend.title = element_text( size=4), legend.text=element_text(size=4))
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))+theme(legend.title = element_text( size=4), legend.text=element_text(size=4))+labs(fill="Treatment Class")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=6))+labs(fill="Treatment\n Class")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=5))+labs(fill="Treatment\n Class")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=5))+labs(fill="Treatment\n Class")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=7))+labs(fill="Treatment\n Class")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=7,fontface="bold"))+labs(fill="Treatment\n Class")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=7,face="bold"))+labs(fill="Treatment\n Class")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(nrow=4,override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=7,face="bold"))+labs(fill="Treatment\n Class")
val <- "Immuno + TKI"
gsub(" \\+ "," \\+ \n", val)
source("~/Andre_F_functions_git/plot_treatment_journeys_v2.R")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=F,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(nrow=4,override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=7,face="bold"))+labs(fill="Treatment\n Class")
 plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=T,show_legend=T, show_label=F,num_drug_classes=4)+theme_anf_big+guides(fill=guide_legend(nrow=4,override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=10,face="bold"))+labs(fill="Treatment\n Class")
 plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=T,show_legend=T, show_label=F,num_drug_classes=4)+theme_anf_big+guides(fill=guide_legend(nrow=4,override.aes=list(size=0.5)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=10,face="bold"))+labs(fill="Treatment\n Class")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=T,show_legend=T, show_label=F,num_drug_classes=4)+theme_anf_big+guides(fill=guide_legend(nrow=4,override.aes=list(size=0.9)))+theme(legend.title = element_text( size=6), legend.text=element_text(size=10,face="bold"))+labs(fill="Treatment\n Class")
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort/n Treatment Timelines",drop_untreated=T,show_legend=T, show_label=F,num_drug_classes=4)+theme_anf_big+guides(fill=guide_legend(nrow=4,override.aes=list(size=0.9)))+theme(legend.title = element_text( size=10), legend.text=element_text(size=8,face="bold"))+labs(fill="Treatment\n Class")
ggplot(dplyr::filter(CN_vs_response, Copy_Number_Threshold==3), aes(Altered_Fraction,Change,fill=BOR,shape=Treatment))+geom_point(color="gray50",size=5)+theme_anf+scale_y_reverse()+scale_shape_manual(values=21:25)+guides(shape=guide_legend(override.aes=list(fill="gray50")),fill=guide_legend(ncol=legend_col,override.aes=list(shape=21)))+labs(title="Fraction of Genome Altered vs Relative change in tumor size")+xlab("Fraction of Genome Altered")+ylab("% Change in tumor size")
ggplot(dplyr::filter(CN_vs_response, Copy_Number_Threshold==3), aes(Altered_Fraction,Change,fill=BOR,shape=Treatment))+geom_point(color="gray50",size=8)+theme_anf+scale_y_reverse()+scale_shape_manual(values=21:25)+guides(shape=guide_legend(override.aes=list(fill="gray50")),fill=guide_legend(ncol=legend_col,override.aes=list(shape=21)))+labs(title="Fraction of Genome Altered vs Relative change in tumor size")+xlab("Fraction of Genome Altered")+ylab("% Change in tumor size")
ggplot(dplyr::filter(CN_vs_response, Copy_Number_Threshold==3), aes(Altered_Fraction,Change,fill=BOR,shape=Treatment))+geom_point(color="gray50",size=10)+theme_anf+scale_y_reverse()+scale_shape_manual(values=21:25)+guides(shape=guide_legend(override.aes=list(fill="gray50")),fill=guide_legend(ncol=legend_col,override.aes=list(shape=21)))+labs(title="Fraction of Genome Altered vs Relative change in tumor size")+xlab("Fraction of Genome Altered")+ylab("% Change in tumor size")
anf_color_palette
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort \n Treatment Timelines",drop_untreated=T,show_legend=T, show_label=F,num_drug_classes=4)+theme_anf_big+guides(fill=guide_legend(nrow=4,override.aes=list(size=0.9)))+theme(legend.title = element_text( size=10), legend.text=element_text(size=8,face="bold"))+labs(fill="Treatment\n Class")+scale_fill_manual(values=sample(anf_color_palette))
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort \n Treatment Timelines",drop_untreated=T,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(nrow=4,override.aes=list(size=0.9)))+theme(legend.title = element_text( size=10), legend.text=element_text(size=8,face="bold"))+labs(fill="Treatment\n Class")+scale_fill_manual(values=sample(anf_color_palette))
plot_treatment_journeys(input_td, plot_option="Class",title="Dedifferentiated/Well-Differentiated Liposarcoma Cohort \n Treatment Timelines",drop_untreated=T,show_legend=T, show_label=F,num_drug_classes=5)+theme_anf_big+guides(fill=guide_legend(nrow=4,override.aes=list(size=0.9)))+theme(legend.title = element_text( size=10), legend.text=element_text(size=8,face="bold"))+labs(fill="Treatment\n Class")+scale_fill_manual(values=anf_color_palette)
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
str(public_sig_enrichment_df)
str(dplyr::filter(public_sig_enrichment_df, Network=="DDLPS_WDLPS_24Q1"))
table(dplyr::filter(public_sig_enrichment_df, Network=="DDLPS_WDLPS_24Q1")$pathway)
uniqe(dplyr::filter(public_sig_enrichment_df, Network=="DDLPS_WDLPS_24Q1")$pathway)
unique(dplyr::filter(public_sig_enrichment_df, Network=="DDLPS_WDLPS_24Q1")$pathway)
unique(dplyr::filter(sig_enrichment_df_final, Network=="DDLPS_WDLPS_24Q1")$pathway)
str(module_GO_final2)
dplyr::filter(module_GO_final2, network=="DDLPS_WDLPS_24Q1", padj <=0.05, Module!="grey") 
str(dplyr::filter(module_GO_final2, network=="DDLPS_WDLPS_24Q1", padj <=0.05, Module!="grey") )
str(unique(dplyr::filter(module_GO_final2, network=="DDLPS_WDLPS_24Q1", padj <=0.05, Module!="grey")$Module ))
str(unique(dplyr::filter(module_GO_final2, network=="DDLPS_WDLPS_24Q1", Module!="grey")$Module ))
str(final_modules[[1]])
str(relevant_modules)
dplyr::filter(relevant_modules, network=="DDLPS_WDLPS_24Q1")
str(relevant_modules)
names(final_modules)
str(KD_file)
left_join(KD_file, network_mapping)
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
str(cell_line_ssGSEA_mat_list[[1]])
str(cell_line_biomarker_summary)
str(cell_line_ssGSEA_mat_list[[1]])
names(cell_line_ssGSEA_mat_list)
grep("Responsive", colnames(sub_mat)
)
grep("Responsive", colnames(sub_mat)
for(i in names(cell_line_ssGSEA_mat_list)){

    sub_mat <- cell_line_ssGSEA_mat_list[[i]]
    sub_mat$Cohort <- NULL
    sub_mat$patient_id <- NULL
    grep("Responsive", colnames(sub_mat)
}
for(i in names(cell_line_ssGSEA_mat_list)){

    sub_mat <- cell_line_ssGSEA_mat_list[[i]]
    sub_mat$Cohort <- NULL
    sub_mat$patient_id <- NULL
    index <- grep("Responsive", colnames(sub_mat))

}
index
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
colnames(sub)
index
    sub <- reshape2::melt(sub_mat, id.vars=colnames(sub_mat)[1:index])
str(sub)
 ggplot(sub, aes(Cmpd,value,fill=variable, shape=P53_WT))+geom_boxplot(color="gray50", alpha=0.5)+facet_wrap(variable~., scales="free")
ggplot(sub, aes(Cmpd,value,fill=variable, alpha=P53_WT))+geom_boxplot(color="gray50")+facet_wrap(variable~., scales="free")+scale_alpha_manual(values=c(0.4,0.8))
        ggplot(sub, aes(Cmpd,value,fill=variable, alpha=P53_WT))+geom_boxplot(color="gray50")+facet_wrap(OncotreeLineage~., scales="free")+scale_alpha_manual(values=c(0.4,0.8))+
        ggplot(sub, aes(Cmpd,value,fill=variable, alpha=P53_WT))+geom_boxplot(color="gray50")+facet_wrap(OncotreeLineage~., scales="free")+scale_alpha_manual(values=c(0.4,0.8))
        ggplot(sub, aes(Cmpd,value,fill=OncotreeLineage, alpha=P53_WT))+geom_boxplot(color="gray50")+facet_wrap(OncotreeLineage~., scales="free")+scale_alpha_manual(values=c(0.4,0.8))
        ggplot(sub, aes(Cmpd,value,fill=OncotreeLineage, alpha=P53_WT))+geom_boxplot(color="gray50")+facet_wrap(OncotreeLineage~., scales="free")+scale_alpha_manual(values=c(0.4,0.8))+theme_anf+scale_TF_score(color_list=readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/Mila_Signature_Color_Scale.rds"))
        ggplot(sub, aes(Cmpd,value,fill=OncotreeLineage, shape=P53_WT))+geom_point()+facet_wrap(OncotreeLineage~., scales="free")+scale_alpha_manual(values=c(0.4,0.8))+theme_anf+scale_TF_score(color_list=readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/Mila_Signature_Color_Scale.rds"))+scale_shape_manual(values=21:25)
        ggplot(sub, aes(Cmpd,value,fill=OncotreeLineage, shape=P53_WT))+geom_point(color="gray50",size=2)+facet_wrap(variable~., scales="free")+scale_alpha_manual(values=c(0.4,0.8))+theme_anf+scale_TF_score(color_list=readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/Mila_Signature_Color_Scale.rds"))+scale_shape_manual(values=21:25)
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
sub_mat[1:5,1:5]
str(sub_mat)
str(rownames(sub_mat))
i
str(sub)
Heatmap(sub_mat)
str(sub_mat)
Heatmap(sub_mat)
str(rownames(sub_mat)
)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL

Heatmap(sub_mat)
Heatmap(zscore_mat(sub_mat))
Heatmap(zscore_df(sub_mat))
get_most_variable(sub_mat)
get_most_variable(sub_mat,"row")
str(get_most_variable(sub_mat,"row"))
zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row")),]
Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.5)),])
i
for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT,Pathos_IC50_Estimate)
    ht_anno <- HeatmapAnnotation(sub_meta[-1])
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.5)),])

    p <- ht_anno %v% ht
    print(p)


}
for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT,Pathos_IC50_Estimate)
    ht_anno <- HeatmapAnnotation(df=sub_meta[-1])

    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.5)),])

    p <- ht_anno %v% ht
    print(p)


}
str(sub)
for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT,Pathos_IC50_Estimate) %>% unique
    ht_anno <- HeatmapAnnotation(sub_meta[-1])
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.5)),])

    p <- ht_anno %v% ht
    print(p)


}

for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT,Pathos_IC50_Estimate) %>% unique
    ht_anno <- HeatmapAnnotation(df=sub_meta[-1])
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.5)),])

    p <- ht_anno %v% ht
    print(p)


}

log(sub_meta$Pathos_IC50_Estimate)
log10(sub_meta$Pathos_IC50_Estimate)
head(sub_meta)
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT) %>% unique
    int_palette <- anf_color_palette
    pal_list <- list()

    for(j in colnames(sub_meta[-1])){

    vals <- unique(sub_meta[,j])
    sub_pal <- sample(int_palette, length(vals))
    names(sub_pal) <- vals
    int_palette <- setdiff(int_palette, sub_pal)
    pal_list[[j]] <- sub_pal
    }


pal_list
col=colorRamp2(colors=plasma(10), breaks=seq(100,-50,length.out=10)
summary(sub$Pathos_IC50_Estimate)
col=colorRamp2(colors=plasma(7), breaks=seq(0,2500,length.out=7)
)
col
    int_palette <- anf_color_palette
    pal_list <- list()

    sub_meta <- dplyr::select(cell_line_ssGSEA_mat_list[[1]], sample, Cmpd, OncotreeLineage, P53_WT)
    for(j in colnames(sub_meta[-1])){

    vals <- unique(sub_meta[,j])
    sub_pal <- sample(int_palette, length(vals))
    names(sub_pal) <- vals
    int_palette <- setdiff(int_palette, sub_pal)
    pal_list[[j]] <- sub_pal
    }



for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT) %>% unique
    sub_meta2 <- dplyr::select(sub, sample, Pathos_IC50_Estimate)

    ht_anno <- HeatmapAnnotation(df=sub_meta[-1],col=pal_list)
    ht_anno2 <- Heatmap(sub_meta2[-1],col=colorRamp2(colors=plasma(10), breaks=seq(0,2500,length.out=10)
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.25)),])

    p <- ht_anno %v% ht_anno2 %v% ht

    cat("##### ",i," subnetworks\n")
    print(p)
    cat("\n\n")
}


for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT) %>% unique
    sub_meta2 <- dplyr::select(sub, sample, Pathos_IC50_Estimate)

    ht_anno <- HeatmapAnnotation(df=sub_meta[-1],col=pal_list)
    ht_anno2 <- Heatmap(sub_meta2[-1],col=colorRamp2(colors=plasma(10), breaks=seq(0,2500,length.out=10)))
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.25)),])

    p <- ht_anno %v% ht_anno2 %v% ht

    cat("##### ",i," subnetworks\n")
    print(p)
    cat("\n\n")
}

str(sub_meta2)
Heatmap(sub_meta2[-1])
Heatmap(t(sub_meta2[-1]))
for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT) %>% unique
    sub_meta2 <- dplyr::select(sub, sample, Pathos_IC50_Estimate)

    ht_anno <- HeatmapAnnotation(df=sub_meta[-1],col=pal_list)
    ht_anno2 <- Heatmap(t(sub_meta2[-1]),col=colorRamp2(colors=plasma(10), breaks=seq(0,2500,length.out=10)))
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.25)),])

    p <- ht_anno %v% ht_anno2 %v% ht

    cat("##### ",i," subnetworks\n")
    print(p)
    cat("\n\n")
}

for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT) %>% unique
    sub_meta2 <- dplyr::select(sub, sample, Pathos_IC50_Estimate) %>% unique

    ht_anno <- HeatmapAnnotation(df=sub_meta[-1],col=pal_list)
    ht_anno2 <- Heatmap(t(sub_meta2[-1]),col=colorRamp2(colors=plasma(10), breaks=seq(0,2500,length.out=10)))
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.25)),])

    p <- ht_anno %v% ht_anno2 %v% ht

    cat("##### ",i," subnetworks\n")
    print(p)
    cat("\n\n")
}

ht_anno %v% ht %v% ht_anno2
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.5)),],column_split=sub_meta$Cmpd)
ht_anno %v% ht %v% ht_anno2
str(rownames(sub_meta)
)
for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT) %>% unique
    rownames(sub_meta) <- sub_meta$sample
    sub_meta2 <- dplyr::select(sub, sample, Pathos_IC50_Estimate) %>% unique
    rownames(sub_meta2) <- sub_meta2$sample

    ht_anno <- HeatmapAnnotation(df=sub_meta[-1],col=pal_list)
    ht_anno2 <- Heatmap(t(sub_meta2[-1]),col=colorRamp2(colors=plasma(10), breaks=seq(0,2500,length.out=10)),show_column_dend=F)
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.5)),],column_split=sub_meta$Cmpd)

    p <- ht_anno %v% ht_anno2 %v% ht

    cat("##### ",i," subnetworks\n")
    print(p)
    cat("\n\n")
}



for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT) %>% unique
    rownames(sub_meta) <- sub_meta$sample
    sub_meta2 <- dplyr::select(sub, sample, Pathos_IC50_Estimate) %>% unique
    rownames(sub_meta2) <- sub_meta2$sample

    ht_anno <- HeatmapAnnotation(df=sub_meta[-1],col=pal_list)
    ht_anno2 <- Heatmap(t(sub_meta2[-1]),col=colorRamp2(colors=plasma(10), breaks=seq(0,2500,length.out=10)),show_column_dend=F)
    ht <- Heatmap(zscore_df(sub_mat)[names(get_most_variable(sub_mat,"row",quantile=0.5)),],column_split=sub_meta$Cmpd)

    p <- ht_anno %v% ht %v% ht_anno2

    cat("##### ",i," subnetworks\n")
    print(p)
    cat("\n\n")
}

    index <- names(get_most_variable(sub_mat,"row"))
    index <- index[1:min(c(length(index),10))]

index
for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT) %>% unique
    rownames(sub_meta) <- sub_meta$sample
    sub_meta2 <- dplyr::select(sub, sample, Pathos_IC50_Estimate) %>% unique
    rownames(sub_meta2) <- sub_meta2$sample


    index <- names(get_most_variable(sub_mat,"row"))
    index <- index[1:min(c(length(index),10))]
    ht_anno <- HeatmapAnnotation(df=sub_meta[-1],col=pal_list)
    ht_anno2 <- Heatmap(t(sub_meta2[-1]),col=colorRamp2(colors=plasma(10), breaks=seq(0,2500,length.out=10)),show_column_dend=F)
    ht <- Heatmap(zscore_df(sub_mat)[index,],column_split=sub_meta$Cmpd,column_title = paste0(i," subnetwork changes in cell lines with Milademetan Treatment"))

    p <- ht_anno %v% ht %v% ht_anno2

    cat("##### ",i," subnetworks\n")
    print(p)
    cat("\n\n")
}

for(i in names(cell_line_ssGSEA_mat_list)){

    sub <- cell_line_ssGSEA_mat_list[[i]]
    sub$Cohort <- NULL
    sub$patient_id <- NULL
    index <- grep("Responsive", colnames(sub))
    sub <- reshape2::melt(sub, id.vars=colnames(sub)[1:index])
    sub_mat <- reshape2::dcast(sub, variable~sample ,value.var="value", fun.aggregate=mean,fill=0)
    rownames(sub_mat) <- sub_mat[,1]
    sub_mat[,1] <- NULL
    sub_meta <- dplyr::select(sub, sample, Cmpd, OncotreeLineage, P53_WT) %>% unique
    rownames(sub_meta) <- sub_meta$sample
    sub_meta2 <- dplyr::select(sub, sample, Pathos_IC50_Estimate) %>% unique
    rownames(sub_meta2) <- sub_meta2$sample


    index <- names(get_most_variable(sub_mat,"row"))
    index <- index[1:min(c(length(index),10))]
    ht_anno <- HeatmapAnnotation(df=sub_meta[-1],col=pal_list)
    ht_anno2 <- Heatmap(t(sub_meta2[-1]),col=colorRamp2(colors=plasma(10), breaks=seq(0,2500,length.out=10)),show_column_dend=F)
    ht <- Heatmap(zscore_df(sub_mat)[index,],column_split=sub_meta$Cmpd,column_title = paste0(i," subnetwork changes in cell lines with Milademetan Treatment"),top_annotation=ht_anno)

    p <- ht %v% ht_anno2

    cat("##### ",i," subnetworks\n")
    print(p)
    cat("\n\n")
}

    column_order <- arrange(sub_meta,Pathos_IC50_Estimate)[,1]
    column_order <- arrange(sub_meta,"Pathos_IC50_Estimate")[,1]
column_order
head(arrange(sub_meta,Pathos_IC50_Estimate))
head(arrange(sub_meta,"Pathos_IC50_Estimate"))
head(arrange(sub_meta2,Pathos_IC50_Estimate))
    column_order <- arrange(sub_meta2,Pathos_IC50_Estimate)[,1]
    ht <- Heatmap(zscore_df(sub_mat)[index,],column_split=sub_meta$Cmpd,column_title = paste0(i," subnetwork changes in cell lines with Milademetan Treatment"),top_annotation=ht_anno,column_order=column_order)
ht %v% ht_anno2
    ht <- Heatmap(zscore_df(sub_mat)[index,],column_split=sub_meta$Cmpd,column_title = paste0(i," subnetwork changes in cell lines with Milademetan Treatment"),top_annotation=ht_anno,column_order=column_order,name="Subnetwork Expression (z-scored)")

    p <- ht %v% ht_anno2

    cat("##### ",i," subnetworks\n")
    print(p)
    cat("\n\n")

rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
tranche
str(relevant_modules)
relevant_modules[i,"Tranche"]
str(network_list)
network_list[i,2]
i
tranche
for(i in 1:nrow(network_list)){
tranche <- network_list[i,2]
network <- network_list[i,1]
}
tranche
networks$Tranche
    tranche <- KD_int[i,"Tranche"]
tranche
str(KD_int)
str(KD_int)
str(KD_file)
ggplot(dplyr::filter(KD_comparison_sub, Network=="DDLPS_WDLPS_24Q1",grepl("TP53|MDM2|CDK4",Gene),padj <=0.1), aes(y=pathway,Gene))+geom_tile(color="gray90",size=2)+theme_anf_big+xlab("Subnetwork Key Regulator")+ylab("Subnetwork")+labs(title="Subnetworks regulated by CDK4, TP53 and MDM2")
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")     
names(metadata_td)
str(KD_file)
str(final_modules)
str(combined_meta)
calls <- dplyr::select(combined_meta, -os_pdx_time,-os_pdx_flag)
str(calls)
str(DDLPS_module_list)
str(DDLPS_expression)
names(final_modules)
str(final_modules[1:5])
str(ssGSEA_mat)
str(DDLPS_ssGSEA_mat)
str(final_modules[1:5])
 input_td <- readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_TD.rds")
input_td <- c(input_td, metadata_td[setdiff(names(metadata_td), names(input_td))])

env <- profile_environment(ls()); tail(env,n=10)
rm(sub_mmf)
metadata <- dplyr::select(combined_meta, -os_pdx_time,-os_pdx_flag)

input_td <- readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_TD.rds")
input_td <- c(input_td, metadata_td[setdiff(names(metadata_td), names(input_td))])
rm(metadata_td)

env <- profile_environment(ls()); tail(env,n=10)
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       C-c C-c
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
str(final_modules)
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
str(module_GO_final)
str(dplyr::filter(module_GO_final,network=="DDLPS_WDLPS_24Q1"))
unique(dplyr::filter(module_GO_final,network=="DDLPS_WDLPS_24Q1")$Module)
for(i in unique(module_GO_final$network)){
    sub <- dplyr::filter(module_GO_final,network==i, Module %in% dplyr::filter(module_GO_final,padj <=0.05)$Module, Module!="grey") 
    p <- ggplot(sub, aes(Module, pathway, fill=recall))+geom_point(aes(size=-log10(padj)), color="gray50",shape=21)+theme_bw()+theme_anf+facet_grid(~Network,scales="free_x")+scale_fill_gradient2(low="blue", mid="white", high="red",limits = c(0, 1), oob = scales::squish)+labs(title="Module Functional Enrichment",subtitle="OS-associated modules in DDLPS networks")+scale_size_area(n.breaks=6,limits=c(0,40),oob=scales::squish,max_size=6)+facet_wrap(Net~.)
    cat("##### ",i," modules \n")
    print(p)
    cat("\n\n")
}


str(dplyr::filter(module_GO_final,network=="DDLPS_WDLPS_24Q1",Module=="plum2"))
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
-log10(1)
any(is.na(module_GO_final$padj)
)
any(is.na(-log10(module_GO_final$padj)))
summary(is.na(-log10(module_GO_final$padj)))
summary(-log10(module_GO_final$padj)))
summary(-log10(module_GO_final$padj))
str(module_sub)
str(priority_functions)
str(final_table4)
table(final_table4[,3])
str(DDLPS_expression)
names(input_td)
str(final_modules)
DDLPS_expression <- tempus_rna_expression_to_mat(dplyr::filter(input_td$onco_result_rna_gene, !is.na(Gene)),"Gene","tpm_log2")

final_modules2 <- lapply(final_modules, function(x) setdiff(translate_ENSMBL_to_HGNC(x),NA))

str(input_td$onco_result_rna_gene)
DDLPS_expression <- tempus_rna_expression_to_mat(dplyr::filter(input_td$onco_result_rna_gene, !is.na(gene_symbol)),"gene_symbol","tpm_log2")

final_modules2 <- lapply(final_modules, function(x) setdiff(translate_ENSMBL_to_HGNC(x),NA))

str(DDLPS_expression)
DDLPS_expression <- tempus_rna_expression_to_mat(dplyr::filter(input_td$onco_result_rna_gene, !is.na(gene_symbol)),"gene_symbol","tpm_log2")


final_modules2 <- lapply(final_modules, function(x) setdiff(translate_ENSMBL_to_HGNC(x),NA))

str(dplyr::filter(input_td$onco_result_rna_gene, !is.na(gene_symbol)))
DDLPS_expression <- tempus_rna_expression_to_mat(dplyr::filter(input_td$onco_result_rna_gene, !is.na(gene_symbol))[1:1e5,],"gene_symbol","tpm_log2")
str(DDLPS_expression)
final_modules2 <- lapply(final_modules, function(x) setdiff(translate_ENSMBL_to_HGNC(x),NA))
str(final_modules2)
str(calls)
unique(runs$Tranche)
runs
names(final_modules)[1:10]
network_mapping
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
str(expr_vec)
i
head(colnames(DDLPS_expression)
)
str(ssGSEA)
str(NES_score)
 length(final_modules2)
str(final_modules)
str(unique(names(final_modules)))
str(unique(names(final_modules2)))
str(final_modules2)
str(NES_score)
str(ssGSEA)
table(names(expr_vec) %in% unlist(final_modules2))
table(unlist(final_modules2) %in% names(expr_vec))
str(lapply(final_modules2, function(x) intersect(x, rownames(DDLPS_expression))))
summary(unlist(lapply(final_modules2, function(x) length(intersect(x, rownames(DDLPS_expression))))))
summary(unlist(lapply(final_modules, function(x) length(x))))
length(final_modules2[unlist(lapply(final_modules2, function(x) length(x)>0))])
length(final_modules2[unlist(lapply(final_modules2, function(x) length(x)>0))])
unlist(lapply(final_modules2, function(x) length(x)>0))
length(final_modules2[unlist(lapply(final_modules2, function(x) length(intersect(x,rownames(DDLPS_expression)))>0))])
if(!file.exists("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_expression_mat.rds")){
    DDLPS_expression <- tempus_rna_expression_to_mat(dplyr::filter(input_td$onco_result_rna_gene, !is.na(gene_symbol)),"gene_symbol","tpm_log2")
    saveRDS(DDLPS_expression,"~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_expression_mat.rds")
    } else { DDLPS_expression <- readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_expression_mat.rds") }

final_modules2 <- lapply(final_modules, function(x) setdiff(translate_ENSMBL_to_HGNC(x),NA))
final_modules2 <- final_modules2[unlist(lapply(final_modules2, function(x) length(intersect(x,rownames(DDLPS_expression)))>0))]
DDLPS_ssGSEA_mat <- data.frame(stringsAsFactors = F)
if(!file.exists("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")){

    for(i in colnames(DDLPS_expression)){
    expr_vec <- DDLPS_expression[,i]
    names(expr_vec) <- rownames(DDLPS_expression)
    expr_vec <- sort(expr_vec)
    ssGSEA <- fgseaMultilevel(pathways=final_modules2,stats=expr_vec, nPermSimple = 1e3) %>% dplyr::select(-leadingEdge)

    NES_score <- ssGSEA$NES
    int <- data.frame(NES_score)
    rownames(int) <- ssGSEA$pathway
    ssGSEA_mat <- rbind(ssGSEA_mat, t(int))}


    rownames(ssGSEA_mat) <- colnames(DDLPS_expression_sub)
    ssGSEA_mat$patient_id <- rownames(ssGSEA_mat)

    saveRDS(ssGSEA_mat,"~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")
} else{
    ssGSEA_mat <- readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")}

final_metadata <- left_join(metadata, ssGSEA_mat)

i
str(NES_score)
str(ssGSEA)
str(ssGSEA_mat)
DDLPS_ssGSEA_mat <- data.frame(stringsAsFactors = F)
if(!file.exists("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")){

    for(i in colnames(DDLPS_expression)){
    expr_vec <- DDLPS_expression[,i]
    names(expr_vec) <- rownames(DDLPS_expression)
    expr_vec <- sort(expr_vec)
    ssGSEA <- fgseaMultilevel(pathways=final_modules2,stats=expr_vec, nPermSimple = 1e3) %>% dplyr::select(-leadingEdge)

    NES_score <- ssGSEA$NES
    int <- data.frame(NES_score)
    rownames(int) <- ssGSEA$pathway
    DDLPS_DDLPS_ssGSEA_mat <- rbind(DDLPS_ssGSEA_mat, t(int))}


    rownames(DDLPS_ssGSEA_mat) <- colnames(DDLPS_expression_sub)
    DDLPS_ssGSEA_mat$patient_id <- rownames(DDLPS_ssGSEA_mat)

    saveRDS(DDLPS_ssGSEA_mat,"~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")
} else{
    DDLPS_ssGSEA_mat <- readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")}

final_metadata <- left_join(metadata, DDLPS_ssGSEA_mat)

i
dim(DDLPS_ssGSEA_mat)
grep(i, colnames(DDLPS_expression)
)
DDLPS_ssGSEA_mat <- data.frame(stringsAsFactors = F)
if(!file.exists("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")){

    for(i in colnames(DDLPS_expression)){
    expr_vec <- DDLPS_expression[,i]
    names(expr_vec) <- rownames(DDLPS_expression)
    expr_vec <- sort(expr_vec)
    ssGSEA <- fgseaMultilevel(pathways=final_modules2,stats=expr_vec, nPermSimple = 1e3) %>% dplyr::select(-leadingEdge)

    NES_score <- ssGSEA$NES
    int <- data.frame(NES_score)
    rownames(int) <- ssGSEA$pathway
    DDLPS_ssGSEA_mat <- rbind(DDLPS_ssGSEA_mat, t(int))}


    rownames(DDLPS_ssGSEA_mat) <- colnames(DDLPS_expression_sub)
    DDLPS_ssGSEA_mat$patient_id <- rownames(DDLPS_ssGSEA_mat)

    saveRDS(DDLPS_ssGSEA_mat,"~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")
} else{
    DDLPS_ssGSEA_mat <- readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")}

final_metadata <- left_join(metadata, DDLPS_ssGSEA_mat)

i
dim(DDLPS_ssGSEA_mat)
str(rownames(DDLPS_ssGSEA_mat)
)
    rownames(DDLPS_ssGSEA_mat) <- colnames(DDLPS_expression)
    DDLPS_ssGSEA_mat$patient_id <- rownames(DDLPS_ssGSEA_mat)

    saveRDS(DDLPS_ssGSEA_mat,"~/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/DDLPS_25Q2_ssGSEA_scores.rds")
final_metadata <- left_join(metadata, DDLPS_ssGSEA_mat)
str(runs)
runs <- left_join(runs, dplyr::select(network_mapping, Network=network, Net))
metadata_list <- list()

for(i in unique(runs$Net)){
    metadata_list[[i]] <- final_metadata[c(colnames(metadata), grep(i,colnames(final_metadata),value=T))]
    }

survival_by_module_list <- list()

for(j in names(metadata_list)){
    sub <- metadata_list[[j]]
    sub$Network <- j
    survival_by_module <- data.frame(stringsAsFactors = F)
    for(i in setdiff(colnames(sub), colnames(metadata))){
        module_int <- last(unlist(strsplit(i,"_")))
        sub$Module_Signature <- as.vector(ifelse(sub[,i]<=quantile(sub[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(sub[,i]>=quantile(sub[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))
        sub$Module_Signature <- factor(sub$Module_Signature, levels=rev(sort(unique(sub$Module_Signature))))

        int <- broom::tidy(coxph(Surv(os_time, os_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Bx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Dx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "1st_Tx"
        survival_by_module <- rbind(survival_by_module, int)

    }
    survival_by_module_list[[j]] <- survival_by_module }

str(sub)
metadata <- left_join(metadata, dplyr::select(outcomes, patient_id,pbx_time=index_time,os_pbx_time,os_pbx_flag)) %>% left_join(dplyr::select(outcomes_dx, patient_id, pdx_time,os_pdx_time,os_pdx_flag)) %>% left_join(dplyr::select(outcomes_tx, patient_id,ptx_time,os_ptx_time,os_ptx_flag))
metadata <- left_join(metadata, dplyr::select(outcomes, patient_id,pbx_time=index_time,os_pbx_time=os_time,os_pbx_flag=os_flag)) %>% left_join(dplyr::select(outcomes_dx, patient_id, pdx_time,os_pdx_time,os_pdx_flag)) %>% left_join(dplyr::select(outcomes_tx, patient_id,ptx_time,os_ptx_time,os_ptx_flag))
final_metadata <- left_join(metadata, DDLPS_ssGSEA_mat)
str(final_metadata)
table(is.na(final_metadata$result_018_DDLPS_DM2_plum2)
)
table(is.na(final_metadata$result_018_DDLPS_DM2_plum1)
)
```{r calculate OS associations for network modules }

runs <- left_join(runs, dplyr::select(network_mapping, Network=network, Net))
metadata_list <- list()

for(i in unique(runs$Net)){
    metadata_list[[i]] <- final_metadata[c(colnames(metadata), grep(i,colnames(final_metadata),value=T))]
    }

survival_by_module_list <- list()

for(j in names(metadata_list)){
    sub <- metadata_list[[j]]
    sub$Network <- j
    survival_by_module <- data.frame(stringsAsFactors = F)
    for(i in setdiff(colnames(sub), colnames(metadata))){
        module_int <- last(unlist(strsplit(i,"_")))
        sub$Module_Signature <- as.vector(ifelse(sub[,i]<=quantile(sub[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(sub[,i]>=quantile(sub[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))
        sub$Module_Signature <- factor(sub$Module_Signature, levels=rev(sort(unique(sub$Module_Signature))))

        int <- broom::tidy(coxph(Surv(os_time, os_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Bx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Dx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "1st_Tx"
        survival_by_module <- rbind(survival_by_module, int)

    }
    survival_by_module_list[[j]] <- survival_by_module }



survival_by_module_list <- list()

for(j in names(metadata_list)){
    sub <- metadata_list[[j]]
    sub$Network <- j
    survival_by_module <- data.frame(stringsAsFactors = F)
    for(i in setdiff(colnames(sub), colnames(metadata))){
        module_int <- last(unlist(strsplit(i,"_")))
        sub$Module_Signature <- as.vector(ifelse(sub[,i]<=quantile(sub[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(sub[,i]>=quantile(sub[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))
        sub$Module_Signature <- factor(sub$Module_Signature, levels=rev(sort(unique(sub$Module_Signature))))

        int <- broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Bx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Dx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "1st_Tx"
        survival_by_module <- rbind(survival_by_module, int)

    }
    survival_by_module_list[[j]] <- survival_by_module }


str(survival_by_module)
i
j
names(metadata_list)
str(survival_by_module_list)
j
table(survival_by_module$Index)
    survival_by_module_list[[j]] <- survival_by_module }
    survival_by_module_list[[j]] <- survival_by_module 
metadata_list <- list()

for(i in unique(runs$Net)){
    metadata_list[[i]] <- final_metadata[c(colnames(metadata), grep(i,colnames(final_metadata),value=T))]
    }

survival_by_module_list <- list()

for(j in names(metadata_list)){
    sub <- metadata_list[[j]]
    sub$Network <- j
    survival_by_module <- data.frame(stringsAsFactors = F)
    for(i in setdiff(colnames(sub), colnames(metadata))){
        module_int <- last(unlist(strsplit(i,"_")))
        sub$Module_Signature <- as.vector(ifelse(sub[,i]<=quantile(sub[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(sub[,i]>=quantile(sub[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))
        sub$Module_Signature <- factor(sub$Module_Signature, levels=rev(sort(unique(sub$Module_Signature))))

        int <- broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Bx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Dx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "1st_Tx"
        survival_by_module <- rbind(survival_by_module, int)

    }
    survival_by_module_list[[j]] <- survival_by_module }

i
setdiff(colnames(sub), colnames(metadata))
str(metadata)
str(DDLPS_ssGSEA_mat)
for(j in names(metadata_list)){
    sub <- metadata_list[[j]]
    survival_by_module <- data.frame(stringsAsFactors = F)
    for(i in setdiff(colnames(sub), colnames(metadata))){
        module_int <- last(unlist(strsplit(i,"_")))
        sub$Module_Signature <- as.vector(ifelse(sub[,i]<=quantile(sub[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(sub[,i]>=quantile(sub[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))
        sub$Module_Signature <- factor(sub$Module_Signature, levels=rev(sort(unique(sub$Module_Signature))))

        int <- broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Bx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "Dx"
        survival_by_module <- rbind(survival_by_module, int)

        int <- broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature , data = sub))
        colnames(int)[2] <- "Log_HR"
        int$Hazard_Ratio <- round(exp(int$Log_HR),3)
        int$Module <- module_int
        int$Network <- j
        int$Index <- "1st_Tx"
        survival_by_module <- rbind(survival_by_module, int)

    }
    survival_by_module_list[[j]] <- survival_by_module }

str(survival_by_module_list)
str(lapply(survival_by_module_list, function(x) dplyr::filter(p.value <=0.05)))
str(lapply(survival_by_module_list, function(x) dplyr::filter(x,p.value <=0.05)))
str(lapply(survival_by_module_list, function(x) table(dplyr::filter(x,p.value <=0.05)[c("Module","Index")])))
lapply(survival_by_module_list, function(x) table(dplyr::filter(x,p.value <=0.05)[c("Module","Index")]))
broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature , data = sub))
broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag,os_pbx_time) ~ Module_Signature , data = sub))
broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag,pbx_time) ~ Module_Signature , data = sub))
str(sub)
broom::tidy(coxph(Surv(os_pdx_time,os_pbx_time, os_pdx_flag,) ~ Module_Signature , data = sub))
broom::tidy(coxph(Surv(os_pbx_time,os_pdx_time, os_pdx_flag,) ~ Module_Signature , data = sub))
broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag,) ~ Module_Signature , data = sub))
p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ smoking_status,
                                      data = sub),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = palette,data=sub)+labs(title=paste0("Overall Survival from date of 1st Tx by Smoking Status"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ smoking_status,data = sub))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ smoking_status,data = sub)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ smoking_status,
                                      data = sub),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = palette,data=sub)+labs(title=paste0("Overall Survival from date of 1st Tx by Smoking Status"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = sub),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = palette,data=sub)+labs(title=paste0("Overall Survival from date of 1st Tx by Smoking Status"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

palette
p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = sub),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=sub)+labs(title=paste0("Overall Survival from date of 1st Tx by Smoking Status"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=fixed_pal,fontface="bold",size=4)

    fixed_pal <- c("gray","cyan1","firebrick")
p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = sub),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=sub)+labs(title=paste0("Overall Survival from date of 1st Tx by Smoking Status"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=fixed_pal,fontface="bold",size=4)

p
p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = sub),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=sub)+labs(title=paste0("Overall Survival from date of 1st Tx by biomarker"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=fixed_pal,fontface="bold",size=4);p

p <- ggsurvplot(fit = survfit(Surv(os_pbx_time,os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = sub),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=sub)+labs(title=paste0("Overall Survival from date of 1st Tx by biomarker"))
        median_os <- surv_median(survfit(Surv(os_pbx_time,os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time,os_ptx_time, os_ptx_flag) ~ Module_Signature,data = sub)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=fixed_pal,fontface="bold",size=4);p

p <- ggsurvplot(fit = survfit(Surv(os_pbx_time,os_pdx_time, os_pdx_flag) ~ Module_Signature,
                                      data = sub),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=sub)+labs(title=paste0("Overall Survival from date of Dx by biomarker"))
        median_os <- surv_median(survfit(Surv(os_pbx_time,os_pdx_time, os_pdx_flag) ~ Module_Signature,data = sub))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time,os_pdx_time, os_pdx_flag) ~ Module_Signature,data = sub)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=fixed_pal,fontface="bold",size=4);p

i
j
colnames(ssGSEA_mat)
colnames(DDLPS_ssGSEA_mat)
str(metadata_list[[1]])
metadata_int <- metadata_list$DDLPS_DM1

i <- "result_015_DDLPS_DM1_brown"

metadata_int$Module_Signature <- as.vector(ifelse(metadata_int[,i]<=quantile(metadata_int[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(metadata_int[,i]>=quantile(metadata_int[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))

    fixed_pal <- c("gray","cyan1","firebrick")


p <- ggsurvplot(fit = survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from date of Bx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Biopsy by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Bx \n")
         print(p)
         print(df)
         cat("\n\n")





p <- ggsurvplot(fit = survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Dx \n")
         print(p)
         print(df)
         cat("\n\n")

p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Tx \n")
         print(p)
         print(df)
         cat("\n\n")

metadata_int <- metadata_list$DDLPS_DM1

i <- "result_015_DDLPS_DM1_brown"

metadata_int$Module_Signature <- as.vector(ifelse(metadata_int[,i]<=quantile(metadata_int[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(metadata_int[,i]>=quantile(metadata_int[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))

    fixed_pal <- c("gray","cyan1","firebrick")

metadata_int <- metadata_list$DDLPS_DM1

i <- "result_015_DDLPS_DM1_brown"

metadata_int$Module_Signature <- as.vector(ifelse(metadata_int[,i]<=quantile(metadata_int[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(metadata_int[,i]>=quantile(metadata_int[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))

    fixed_pal <- c("gray","cyan1","firebrick")


p <- ggsurvplot(fit = survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from date of Bx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Biopsy by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Bx \n")
         print(p)
         print(df)
         cat("\n\n")





p <- ggsurvplot(fit = survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Dx \n")
         print(p)
         print(df)
         cat("\n\n")

p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Tx \n")
         print(p)
         print(df)
         cat("\n\n")

i
module_int <- last(unlist(strsplit(i,"_")))
metadata_int <- metadata_list$DDLPS_DM1

i <- "result_015_DDLPS_DM1_brown"

metadata_int$Module_Signature <- as.vector(ifelse(metadata_int[,i]<=quantile(metadata_int[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(metadata_int[,i]>=quantile(metadata_int[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))

    fixed_pal <- c("gray","cyan1","firebrick")


p <- ggsurvplot(fit = survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from date of Bx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Biopsy by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Bx \n")
         print(p)
         print(df)
         cat("\n\n")





p <- ggsurvplot(fit = survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Dx \n")
         print(p)
         print(df)
         cat("\n\n")

p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Tx \n")
         print(p)
         print(df)
         cat("\n\n")

metadata_int$Module_Signature <- factor(metadata_int$Module_Signature, levels=rev(sort(unique(metadata_int$Module_Signature))))
metadata_int <- metadata_list$DDLPS_DM1

i <- "result_015_DDLPS_DM1_brown"

metadata_int$Module_Signature <- as.vector(ifelse(metadata_int[,i]<=quantile(metadata_int[,i],0.25,na.rm=TRUE),paste0("Low_",module_int),ifelse(metadata_int[,i]>=quantile(metadata_int[,i],0.75,na.rm=TRUE),paste0("High_",module_int),paste0("Middle_",module_int))))

    fixed_pal <- c("gray","cyan1","firebrick")


p <- ggsurvplot(fit = survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from date of Bx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Biopsy by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Bx \n")
         print(p)
         print(df)
         cat("\n\n")





p <- ggsurvplot(fit = survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Dx \n")
         print(p)
         print(df)
         cat("\n\n")

p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Tx \n")
         print(p)
         print(df)
         cat("\n\n")

str(metadata_int$Module_Signature)
metadata_int$Module_Signature <- factor(metadata_int$Module_Signature, levels=rev(sort(unique(metadata_int$Module_Signature))))
str(metadata_int)
p <- ggsurvplot(fit = survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from date of Bx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Biopsy by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Bx \n")
         print(p)
         print(df)
         cat("\n\n")





p <- ggsurvplot(fit = survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Diagnosis by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Dx \n")
         print(p)
         print(df)
         cat("\n\n")

p <- ggsurvplot(fit = survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_ptx_time, os_ptx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from 1st Tx by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Tx \n")
         print(p)
         print(df)
         cat("\n\n")



p <- ggsurvplot(fit = survfit(Surv(os_pbx_time,os_pdx_time, os_pdx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from date of Dx by Brown Subnetwork (RSA using Bx Date)"))
        median_os <- surv_median(survfit(Surv(os_pbx_time,os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time,os_pdx_time, os_pdx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Biopsy by Brown Subnetwork (RSA using Bx Date)"))
        cat("##### OS by Brown Subnetwork score:Dx (RSA using Bx Date) \n")
         print(p)
         print(df)
         cat("\n\n")

grep("navajo", colnames(metadata_int))
str(metadata_int)
table(metadata_int$os_pdx_time >=metadata_int$os_pbx_time)
table(metadata_int$os_pdx_time >=metadata_int$os_ptx_time)
table(metadata_int$os_pbx_time >=metadata_int$os_pdx_time)
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
str(metadata_int)
p
i
p <- ggsurvplot(fit = survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from date of Bx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=palette,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Biopsy by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Bx \n")
         print(p)
         print(df)
         cat("\n\n")


p <- ggsurvplot(fit = survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,
                                      data = metadata_int),
                                      risk.table = TRUE,
                                      surv.median.line = "hv",
           palette = fixed_pal,data=metadata_int)+labs(title=paste0("Overall Survival from date of Bx by Brown Subnetwork"))
        median_os <- surv_median(survfit(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int))
        median_os$Label <- paste0("Median OS:",median_os$median," Days")
        median_os$Y_Pos <- seq(1,0.75,length.out=nrow(median_os))
        surv_table <- as.data.frame(broom::tidy(coxph(Surv(os_pbx_time, os_pbx_flag) ~ Module_Signature,data = metadata_int)))
        surv_table[2:5] <- apply(surv_table[2:5],2, function(x) round(x,3))
        colnames(surv_table)[2] <- "Log_HR"
        surv_table$Hazard_Ratio <- round(exp(surv_table$Log_HR),3)


        p$plot <- p$plot+geom_text(data=median_os,aes(x=Inf,y=Y_Pos,label=Label),hjust=1,vjust=1,color=fixed_pal,fontface="bold",size=4)

        df <- knitr::kable(surv_table,caption=paste0("Overall Survival from Biopsy by Brown Subnetwork"))
        cat("##### OS by Brown Subnetwork score:Bx \n")
         print(p)
         print(df)
         cat("\n\n")


rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
str(DRC_files)
str(lapply(DRC_files,function(x) read.table(x, header=T,sep='\t'))))
str(lapply(DRC_files,function(x) read.table(x, header=T,sep='\t')))
DRC_files
DRC_files  <- grep("DRC_[0-9]",list.files("~/Pathos_Projects_Data/p0085_Rain_Diligence/Mila_Signature_Experiment/",".txt",full.names=T),value=T)
DRC_files
MDM2_inhibitors_comp <- readRDS("~/Pathos_Projects/p0085_Rain_Diligence/MDM2_inhibitor_sensitivity_comparison.rds")
Mila_cell_line_metadata <- unique(MDM2_inhibitors_comp[setdiff(colnames(MDM2_inhibitors_comp),c("Drug","Run","Sensitivity"))])
Mila_cell_line_metadata$P53_WT <- ifelse(Mila_cell_line_metadata$P53_WT,"P53 WT","P53 Mut")


DRC_files  <- grep("DRC_[0-9]",list.files("~/Pathos_Projects_Data/p0085_Rain_Diligence/Mila_Signature_Experiment/",".txt",full.names=T),value=T)
Mila_DRC <- do.call("rbind", lapply(DRC_files,function(x) read.table(x, header=T,sep='\t')))




Mila_DRC <- left_join(Mila_DRC, Mila_cell_line_metadata,by="Cell_Line")
Mila_DRC$Batch <- paste0("Batch_",Mila_DRC$Batch)

p <- ggplot(dplyr::filter(Mila_DRC,Concentration_nM!=0), aes(Concentration_nM, Cell_Fraction, fill=OncotreeLineage, group=OncotreeLineage))+geom_smooth(method=drm, method.args=list(fct=L.4()), se=FALSE, aes(color=OncotreeLineage))+scale_x_log10()+geom_point(color="gray50", shape=21, position=position_dodge(width=0.2), alpha=0.4)+theme_anf+scale_TF_score(color_list=color_scale)+facet_grid(P53_WT~.)+geom_hline(yintercept=50, lty=2, lwd=1.25, color="gray50", alpha=0.5)


cat("##### Summary DRCs\n")
print(p)
cat("\n\n")



p <- ggplot(dplyr::filter(Mila_DRC,Concentration_nM!=0), aes(Concentration_nM, Cell_Fraction, fill=OncotreeLineage, shape=P53_WT,group=interaction(OncotreeLineage,Cell_Line),lty=P53_WT))+geom_smooth(method=drm, method.args=list(fct=L.4()), se=FALSE, aes(color=OncotreeLineage))+scale_x_log10()+geom_point(size=2,color="gray50", position=position_dodge(width=0.2), alpha=0.4)+theme_anf+scale_TF_score(color_list=color_scale)+facet_wrap(OncotreeLineage~.,ncol=2)+geom_hline(yintercept=50, lty=2, lwd=1.25, color="gray50", alpha=0.5)+scale_shape_manual(values=21:25)+scale_linetype_manual(values=c(4,1))+guides(color=guide_legend(override.aes=(list(size=7,shape=22))),shape=guide_legend(override.aes=list(color="black",fill="gray50",size=7)))

cat("##### Cell Line Specific DRC\n")
print(p)
cat("\n\n")



MDM2_inhibitors_comp <- readRDS("~/Pathos_Projects/p0085_Rain_Diligence/MDM2_inhibitor_sensitivity_comparison.rds")
Mila_cell_line_metadata <- unique(MDM2_inhibitors_comp[setdiff(colnames(MDM2_inhibitors_comp),c("Drug","Run","Sensitivity"))])
Mila_cell_line_metadata$P53_WT <- ifelse(Mila_cell_line_metadata$P53_WT,"P53 WT","P53 Mut")


DRC_files  <- grep("DRC_[0-9]",list.files("~/Pathos_Projects_Data/p0085_Rain_Diligence/Mila_Signature_Experiment/",".txt",full.names=T),value=T)
Mila_DRC <- do.call("rbind", lapply(DRC_files,function(x) read.table(x, header=T,sep='\t')))




Mila_DRC <- left_join(Mila_DRC, Mila_cell_line_metadata,by="Cell_Line")
Mila_DRC$Batch <- paste0("Batch_",Mila_DRC$Batch)

p <- ggplot(dplyr::filter(Mila_DRC,Concentration_nM!=0), aes(Concentration_nM, Cell_Fraction, fill=OncotreeLineage, group=OncotreeLineage))+geom_smooth(method=drm, method.args=list(fct=L.4()), se=FALSE, aes(color=OncotreeLineage))+scale_x_log10()+geom_point(color="gray50", shape=21, position=position_dodge(width=0.2), alpha=0.4)+theme_anf+scale_TF_score(color_list=color_scale)+facet_grid(P53_WT~.)+geom_hline(yintercept=50, lty=2, lwd=1.25, color="gray50", alpha=0.5)


cat("##### Summary DRCs\n")
print(p)
cat("\n\n")



p <- ggplot(dplyr::filter(Mila_DRC,Concentration_nM!=0), aes(Concentration_nM, Cell_Fraction, fill=OncotreeLineage, shape=P53_WT,group=interaction(OncotreeLineage,Cell_Line),lty=P53_WT))+geom_smooth(method=drm, method.args=list(fct=L.4()), se=FALSE, aes(color=OncotreeLineage))+scale_x_log10()+geom_point(size=2,color="gray50", position=position_dodge(width=0.2), alpha=0.4)+theme_anf+scale_TF_score(color_list=color_scale)+facet_wrap(OncotreeLineage~.,ncol=2)+geom_hline(yintercept=50, lty=2, lwd=1.25, color="gray50", alpha=0.5)+scale_shape_manual(values=21:25)+scale_linetype_manual(values=c(4,1))+guides(color=guide_legend(override.aes=(list(size=7,shape=22))),shape=guide_legend(override.aes=list(color="black",fill="gray50",size=7)))

cat("##### Cell Line Specific DRC\n")
print(p)
cat("\n\n")



color_scale <- readRDS("~/Pathos_Projects_Data/p0085_Rain_Diligence/Mila_Signature_Color_Scale.rds")
MDM2_inhibitors_comp <- readRDS("~/Pathos_Projects/p0085_Rain_Diligence/MDM2_inhibitor_sensitivity_comparison.rds")
Mila_cell_line_metadata <- unique(MDM2_inhibitors_comp[setdiff(colnames(MDM2_inhibitors_comp),c("Drug","Run","Sensitivity"))])
Mila_cell_line_metadata$P53_WT <- ifelse(Mila_cell_line_metadata$P53_WT,"P53 WT","P53 Mut")


DRC_files  <- grep("DRC_[0-9]",list.files("~/Pathos_Projects_Data/p0085_Rain_Diligence/Mila_Signature_Experiment/",".txt",full.names=T),value=T)
Mila_DRC <- do.call("rbind", lapply(DRC_files,function(x) read.table(x, header=T,sep='\t')))




Mila_DRC <- left_join(Mila_DRC, Mila_cell_line_metadata,by="Cell_Line")
Mila_DRC$Batch <- paste0("Batch_",Mila_DRC$Batch)

p <- ggplot(dplyr::filter(Mila_DRC,Concentration_nM!=0), aes(Concentration_nM, Cell_Fraction, fill=OncotreeLineage, group=OncotreeLineage))+geom_smooth(method=drm, method.args=list(fct=L.4()), se=FALSE, aes(color=OncotreeLineage))+scale_x_log10()+geom_point(color="gray50", shape=21, position=position_dodge(width=0.2), alpha=0.4)+theme_anf+scale_TF_score(color_list=color_scale)+facet_grid(P53_WT~.)+geom_hline(yintercept=50, lty=2, lwd=1.25, color="gray50", alpha=0.5)


cat("##### Summary DRCs\n")
print(p)
cat("\n\n")



p <- ggplot(dplyr::filter(Mila_DRC,Concentration_nM!=0), aes(Concentration_nM, Cell_Fraction, fill=OncotreeLineage, shape=P53_WT,group=interaction(OncotreeLineage,Cell_Line),lty=P53_WT))+geom_smooth(method=drm, method.args=list(fct=L.4()), se=FALSE, aes(color=OncotreeLineage))+scale_x_log10()+geom_point(size=2,color="gray50", position=position_dodge(width=0.2), alpha=0.4)+theme_anf+scale_TF_score(color_list=color_scale)+facet_wrap(OncotreeLineage~.,ncol=2)+geom_hline(yintercept=50, lty=2, lwd=1.25, color="gray50", alpha=0.5)+scale_shape_manual(values=21:25)+scale_linetype_manual(values=c(4,1))+guides(color=guide_legend(override.aes=(list(size=7,shape=22))),shape=guide_legend(override.aes=list(color="black",fill="gray50",size=7)))

cat("##### Cell Line Specific DRC\n")
print(p)
cat("\n\n")



p <- ggplot(dplyr::filter(Mila_DRC,Concentration_nM!=0), aes(Concentration_nM, Cell_Fraction, fill=OncotreeLineage, shape=P53_WT,group=interaction(OncotreeLineage,Cell_Line),lty=P53_WT))+geom_smooth(method=drm, method.args=list(fct=L.4()), se=FALSE, aes(color=OncotreeLineage))+scale_x_log10()+geom_point(size=2,color="gray50", position=position_dodge(width=0.2), alpha=0.4)+theme_anf+scale_TF_score(color_list=color_scale)+facet_wrap(OncotreeLineage~.,ncol=3)+geom_hline(yintercept=50, lty=2, lwd=1.25, color="gray50", alpha=0.5)+scale_shape_manual(values=21:25)+scale_linetype_manual(values=c(4,1))+guides(color=guide_legend(override.aes=(list(size=7,shape=22))),shape=guide_legend(override.aes=list(color="black",fill="gray50",size=7)))
p
rmarkdown::render("~/Pathos_Projects/p0085_Rain_Diligence/code/MANTRA_Publication_Figures.Rmd",output_format="html_document")       
env <- profile_environment(ls()); tail(env,n=10)
rm(sub_mmf)
rm(input_td)
quit()
c
getwd()
save.image("/Users/forbesa/Pathos_Projects_Data/p0085_Rain_Diligence/MANTRA_Publication/.RData")
quit()
n
